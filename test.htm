<!DOCTYPE html>
<html>

<head>
	<meta charset="utf-8">
	<meta charset="UTF-8" />
	<link REL="SHORTCUT ICON" HREF="folio.ico">
	<title>folio</title>
	<script src="//ajax.googleapis.com/ajax/libs/jquery/1.11.3/jquery.min.js"></script>	
	<link rel="stylesheet" href="//ajax.googleapis.com/ajax/libs/jqueryui/1.10.4/themes/smoothness/jquery-ui.css" />
	<script src="//ajax.googleapis.com/ajax/libs/jqueryui/1.10.4/jquery-ui.min.js"></script>
	<script src="ckeditor/ckeditor.js"></script>
	<style>
		.sf-header {	font-family:arial;padding:10px;width:200px;
						color:#888;
						}

	</style>
</head>

<body>
Mandala Folio is a tool to select and organize elements created in the Mandala Digital Ecology and create scholarly arguments and attractive presentations to share with others. Any web-addressable element can be included into the presentation, directly embedded or as a clickable link, including:
			
			<div class="sf-header" id="header" contenteditable="true">
				There are two parts to Mandala Folio: A simple authoring tool for collecting, organizing, and annotating the presentations, and a collection of display modules that render the result of that authoring on multiple display platforms, independently of how they will be displayed.

			</div>
			<div class="sf-header" id="footer" contenteditable="true">
				There are two parts to Mandala Folio: A simple authoring tool for collecting, organizing, and annotating the presentations, and a collection of display modules that render the result of that authoring on multiple display platforms, independently of how they will be displayed.

			</div>
	
<script>

	$(document).ready(function() {											// ON PAGE LOADED
		$("#header").on("blur",function(){ 
				$("#header").prop("contenteditable","false");
				trace($("#header").prop("contenteditable"));
			 	});
		$("#header").on("focus",function(){ 
				$("#header").prop("contenteditable","true");
				trace($("#header").prop("contenteditable"));
				trace(2);
			 	});
		
		
		});									







	function trace(msg, p1, p2, p3, p4)										// CONSOLE 
	{
		if (p4 != undefined)
			console.log(msg,p1,p2,p3,p4);
		else if (p3 != undefined)
			console.log(msg,p1,p2,p3);
		else if (p2 != undefined)
			console.log(msg,p1,p2);
		else if (p1 != undefined)
			console.log(msg,p1);
		else
			console.log(msg);
	}




	CKEDITOR.on( 'focus', function ( event ) {
			trace(44)
	});


	CKEDITOR.on( 'instanceCreated', function ( event ) {
		var editor = event.editor,
				element = editor.element;
		// Customize editors for headers and tag list.
		// These editors do not need features like smileys, templates, iframes etc.
		if ( element.is( 'h1', 'h2', 'h3' ) || element.getAttribute( 'id' ) == 'taglist' ) {
			// Customize the editor configuration on "configLoaded" event,
			// which is fired after the configuration file loading and
			// execution. This makes it possible to change the
			// configuration before the editor initialization takes place.
			editor.on( 'configLoaded', function () {

				// Remove redundant plugins to make the editor simpler.
				editor.config.removePlugins = 'colorbutton,find,flash,font,' +
						'forms,iframe,image,newpage,removeformat,' +
						'smiley,specialchar,stylescombo,templates';

				// Rearrange the toolbar layout.
				editor.config.toolbarGroups = [
					{ name: 'editing', groups: [ 'basicstyles', 'links' ] },
					{ name: 'undo' },
					{ name: 'clipboard', groups: [ 'selection', 'clipboard' ] },
					{ name: 'about' }
				];
			} );
		}
	} );
	</script>
</body>

</html>